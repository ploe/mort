#ifndef _MORT_MMU_ROM_T_H
#define _MORT_MMU_ROM_T_H

/* prototypes */

struct _Memory_t;
typedef struct _Memory_t Memory_t;

/* types */

enum {
  CASSETTE_TYPE_ROM_ONLY = 0x00,
  CASSETTE_TYPE_MBC1_ONLY = 0x01,
  CASSETTE_TYPE_MBC1_RAM = 0x02,
  CASSETTE_TYPE_MBC1_RAM_BATTERY = 0x03,
  CASSETTE_TYPE_MBC2 = 0x05,
  CASSETTE_TYPE_MBC2_BATTERY = 0x06,
  CASSETTE_TYPE_ROM_RAM = 0x08,
  CASSETTE_TYPE_ROM_RAM_BATTERY = 0x09,
  CASSETTE_TYPE_MMM01 = 0x0B,
  CASSETTE_TYPE_MMM01_RAM = 0x0C,
  CASSETTE_TYPE_MMM01_RAM_BATTERY = 0x0D,
  CASSETTE_TYPE_MBC3_TIMER_BATTERY = 0x0F,
  CASSETTE_TYPE_MBC3_TIMER_RAM_BATTERY = 0x10,
  CASSETTE_TYPE_MBC3 = 0x11,
  CASSETTE_TYPE_MBC3_RAM = 0x12,
  CASSETTE_TYPE_MBC3_RAM_BATTERY = 0x13,
  CASSETTE_TYPE_MBC5 = 0x19,
  CASSETTE_TYPE_MBC5_RAM = 0x1A,
  CASSETTE_TYPE_MBC5_RAM_BATTERY = 0x1B,
  CASSETTE_TYPE_MBC5_RUMBLE = 0x1C,
  CASSETTE_TYPE_MBC5_RUMBLE_RAM = 0x1D,
  CASSETTE_TYPE_MBC5_RUMBLE_RAM_BATTERY = 0x1E,
  CASSETTE_TYPE_MBC6 = 0x20,
  CASSETTE_TYPE_MBC7_SENSOR_RUMBLE_RAM_BATTERY = 0x22,
  CASSETTE_TYPE_POCKET_CAMERA = 0xFC,
  CASSETTE_TYPE_BANDAI_TAMA5 = 0xFD,
  CASSETTE_TYPE_HUC3 = 0xFE,
  CASSETTE_TYPE_HUC1_RAM_BATTERY = 0xFF,
};

typedef uint8_t CassetteType_t;

typedef struct Rom_t {
  /* Rom_t is a container for the ROM data */
  CassetteType_t cassette_type;
  char *start, *bank;
  long count;
} Rom_t;

Rom_t *OpenRom(const char *);
Rom_t *CloseRom(Rom_t *);
uint8_t RomGet(Memory_t *, uint16_t);
void RomSet(uint16_t, uint8_t);

#endif
